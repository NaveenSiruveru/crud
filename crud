package com.crud1.pack.controller;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.crud1.pack.exception.StudentException;
import com.crud1.pack.model.StudentEntity;
import com.crud1.pack.service.IStudentService;

@RequestMapping("v1/api/student/")
@CrossOrigin
@RestController
public class StudentController {
	
	@Autowired
	private IStudentService service;
	
	@PostMapping("/save")
	public ResponseEntity<String> savingStudentData(@RequestBody StudentEntity s){
		Integer id=service.saveStudent(s);
		String message="student '"+id+"' is added";
		return ResponseEntity.ok(message);
	}
	
	@GetMapping("/show")
	public ResponseEntity<List<StudentEntity>> showAllData(){
		List<StudentEntity> list=service.getAllStudents();
		return ResponseEntity.ok(list);
	}
	
	@GetMapping("/find/{id}")
	public ResponseEntity<StudentEntity> getOneStudent(@PathVariable Integer id){
		ResponseEntity<StudentEntity> response=null;
		try {
			StudentEntity s=service.getOneStudent(id);
			response=ResponseEntity.ok(s);
		}catch (StudentException e) {
			e.printStackTrace();
		}
		return response;
	}
	
	@DeleteMapping("/delete/{id}")
	public ResponseEntity<String> deletingStudent(@PathVariable Integer id){
		ResponseEntity<String> response=null;
		try {
			service.deleteStduent(id);
			response=ResponseEntity.ok("student '"+id+"' is deleted");
		}catch (StudentException e) {
			e.printStackTrace();
		}
		return response;
	}
	
	@PutMapping("update/{id}")
	public ResponseEntity<String> updatingStudent(@RequestBody StudentEntity s){
		ResponseEntity<String> response=null;
		try {
			service.updateStudent(s);
			response=ResponseEntity.ok("Student '"+s.getStdID()+"' is updated");
		}catch (StudentException e) {
			e.printStackTrace();
		}
		return response;
		
	}
	

}
